import { User, Prisma } from '@prisma/client';
import { RegisterUserDto } from './dto/register-user.dto';
import { OnboardingDto } from './dto/onboarding.dto';
import { LoginDto } from './dto/login.dto';
export declare const createUser: (data: Prisma.UserCreateInput) => Promise<User>;
export declare const registerUser: (registerData: RegisterUserDto) => Promise<User>;
export declare const getUser: (id: string) => Promise<User | null>;
export declare const updateUser: (id: string, data: Prisma.UserUpdateInput) => Promise<User>;
export declare const deleteUser: (id: string) => Promise<User>;
export declare const getUserByEmail: (email: string) => Promise<User | null>;
export declare const getAllUsers: () => Promise<User[]>;
export declare const saveOnboarding: (onboardingData: OnboardingDto) => Promise<User>;
export declare const loginUser: (loginData: LoginDto) => Promise<{
    user: {
        id: string;
        createdAt: Date;
        name: string;
        email: string;
        fitnessGoal: string | null;
        experienceLevel: string | null;
        preferredTime: string | null;
        onboardingCompleted: boolean;
        onboardingStep: number;
        updatedAt: Date;
        age: number | null;
        gender: string | null;
        height: number | null;
        weight: number | null;
        fitnessGoals: string[];
        goalPriority: string[];
        primaryGoal: string | null;
        fitnessLevel: string | null;
        workoutFrequency: number | null;
        bodyFatPercentage: number | null;
        measurements: Prisma.JsonValue | null;
        dietaryPreferences: string[];
        totalPoints: number;
        currentStreak: number;
        longestStreak: number;
        totalWorkouts: number;
        totalCaloriesBurned: number;
        weeklyWorkoutGoal: number;
        lastActivityDate: Date | null;
        lastLogin: Date | null;
        totalLogins: number;
    };
    token: string;
    streak: {
        current: number;
        longest: number;
        achievements: string[];
    };
}>;
